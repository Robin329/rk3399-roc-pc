name: Rockchip kernel build tests

on:
  push:
    branches: [ "master"]
  pull_request:
    branches: [ "master"]
    
env:
  NUM_JOBS: 3

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: rk3399
            arch: arm64
            defconfig: roc-rk3399-pc_defconfig
              
    steps:
    - name: Update install
      run: |
        sudo apt-get install git gcc g++ libncurses5-dev  build-essential  libssl-dev flex  bison -y
        sudo apt-get update

    - name: Install toolchain
      run:
        if [[ "${{matrix.arch}}" == "arm64" ]]; then
          sudo apt-get install gcc-aarch64-linux-gnu;
        else
          sudo apt-get install gcc-arm-linux-gnueabihf;
        fi
      timeout-minutes: 5

    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        clean: true

    - name: set soft link
      run: |
        git submodule init && git submodule update --checkout 
        
    - name: cp biscuitos
      run: sudo cp -rf ${{github.workspace}}/workspace/linux-stable/driver/biscuitos ${{github.workspace}}/drivers/ && ls -alh 
           ls  ${{github.workspace}}/drivers/bicuitos/
        
    - name: Build kernel ${{matrix.name}}
      run: |
        mkdir ${{github.workspace}}/build
        export ARCH=${{matrix.arch}}
        if [[ "$ARCH" == "arm64" ]]; then
          export CROSS_COMPILE=aarch64-linux-gnu-
          export DTS_SUBDIR=rockchip
          export IMAGE=Image
        else
          export CROSS_COMPILE=arm-linux-gnueabihf-
          export DTS_SUBDIR=
          export IMAGE=zImage
        fi
        make O=${{github.workspace}}/build ${{matrix.defconfig}}
        scripts/config --file ${{github.workspace}}/build/.config --set-val CONFIG_WERROR y
        make O=${{github.workspace}}/build -j ${{env.NUM_JOBS}} $IMAGE modules dtbs
        make O=${{github.workspace}}/build INSTALL_MOD_PATH=${{github.workspace}}/install modules_install
        cp ${{github.workspace}}/build/arch/${ARCH}/boot/dts/${DTS_SUBDIR}/*.dtb ${{github.workspace}}/install/boot/
        cp ${{github.workspace}}/build/arch/${ARCH}/boot/$IMAGE ${{github.workspace}}/install/boot/${{matrix.kernel}}.img
